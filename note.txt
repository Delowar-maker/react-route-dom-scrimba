1. What is a route/url parameter?
A portion of our route path that is a placeholder for what will eventually
be the actual segment in the URL of the page.

------------
2. Add a route parameter called `productId` to the Route path below:


<Route path="/products/:productId" element={<ProductDetail />} />

------------
3. Add whatever you need to add for the component below to display
   the route parameter in the <h1>

import { useParams } from "react-router-dom"

function ProductDetail() {
    const { productId } = useParams()
    return <h1>Product id is {productId}</h1>
}

1. What is the primary reason to use a nested route?
  Ans: Whenever we have shared UI beteween retes in our app.

2. What is a "Layout Route" ?
  Ans: It's the parent route of some nested route that contains just the portion of the UI that will be shared. It will use an Outlet component.

3. What does the <Outlet/> component do? When do you use it?
  Ans: We use it anytime we have a parent Route that's wrapping children routes. It renders the matching child route's `element` props given in its route difinition.

4. What ii an "Index Route"  
  Ans: It's the "default route" we want to render when the path of the parent route matches. It given us a chance to render an element inside the parent's <Outlet/> at the same path as the parent route.

1. What happens to state when you refresh the page?
2.Can you share the current state of your app with a friend?
  Ans: You have 4 filters and a text search on the list of vans and you want to share the list view with a friend.


 1.When does the code in a loader function run ?
   Ans: before the route change and the component for the route loads


 2.What are some benefits of using a data loader function instead of fetching our data in a useEffect in a component?
  Ans: * Dont't need to worry about handling loading state in the component
       * Don't need to have lengthy/confusing useEffect code in our component
       * don't need to handle error state in the component

 3.What change do we need to make to our BrowserRouter before we can use loader (or any of the new data-layer API features) in our app?
  Ans: get rid of the BrowserRouter component and use createBrowserRouter() instead. Can use CreateRoutesFormElement() instead. can use CreateRoutesFormElement() to make the transition a bit easier


 4. What are the steps we need to take in order to use a loader on any given router?
   Ans: * Define and export a loader function
        * Import the loader and pass it to the route we're wanting to fetch data for
        * Use th useLoaderData() hook to get the data from the loader function